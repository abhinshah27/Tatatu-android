buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.31.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"


// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion "${versions.buildTools}"

    defaultConfig {
        applicationId "com.tatatu"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 50
        versionName project.baseVersionName + ""
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        buildConfigField "String", "BASE_VERSION_NAME", project.baseVersionNameStr

        manifestPlaceholders = [
                auth0Domain: "@string/com_auth0_domain",
                auth0Scheme: "@string/com_auth0_scheme",
                branchTestMode: "true",
                branchAppLink: "27fk.test-app.link"
        ]

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64', 'x86'
        }

    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }


    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".dev"
//            versionNameSuffix ".dev"      TODO:     test if removable

            // lines kept for test purposes
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            aaptOptions.cruncherEnabled = false
        }
        release {

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            debuggable false
            manifestPlaceholders.branchTestMode = "false"
            manifestPlaceholders.branchAppLink = "27fk.app.link"
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"
    productFlavors {
        // flavor WITHOUT Crashlytics and using STAGING endpoints
        dev {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            buildConfigField "boolean", "USE_PROD_CONNECTION", "false"
            dimension "default"
        }
        // flavor WITH Crashlytics and using PRODUCTION endpoints
        prod {
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            buildConfigField "boolean", "USE_PROD_CONNECTION", "true"
            dimension "default"
        }
        // flavor WITHOUT Crashlytics and using PRODUCTION endpoints
        prodNoCrash {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            buildConfigField "boolean", "USE_PROD_CONNECTION", "true"
            dimension "default"
        }
        // flavor WITH Crashlytics and using STAGING endpoints
        devCrash {
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            buildConfigField "boolean", "USE_PROD_CONNECTION", "false"
            dimension "default"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    // INFO:    USE FOR DEBUG BUILDS
//    ext.betaDistributionApkFilePath = "/Users/mbaldrighi/AndroidStudioProjects/HL_TaTaTu/app/build/outputs/apk/devCrash/debug/app-devCrash-universal-debug.apk"

    // INFO:    USE FOR RELEASE BUILDS
    ext.betaDistributionApkFilePath = "/Users/mbaldrighi/AndroidStudioProjects/HL_TaTaTu/app/build/outputs/apk/prod/release/app-prod-universal-release.apk"

    kotlinOptions {
        jvmTarget = '1.8'
    }


    bundle {
        language {
            enableSplit = true
        }
        density {
            // This property is set to true by default.
            enableSplit = true
        }
        abi {
            // This property is set to true by default.
            enableSplit = true
        }
    }

    // Specify that we want to split up the APK based on ABI
    splits {
        abi {
            // Enable ABI split
            enable true

            // Clear list of ABIs
            reset()

            // Specify each architecture currently supported by the Video SDK
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specify that we do want an additional universal SDK
            universalApk true
        }
    }

}


repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://repo.brightcove.com/releases' }
}


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Dependency on a local library module
    implementation project(":videocompressor")

    /* Testing */
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /* General Android config */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "androidx.appcompat:appcompat:${versions.appcompatX}"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.emoji:emoji-appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'


    //===========================//
    //===== [START] Jetpack =====//
    //===========================//

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    kapt "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
    kapt "com.android.databinding:compiler:3.1.4"

    /* Paging */
//    implementation "androidx.paging:paging-runtime-ktx:${versions.paging}"
//    implementation "androidx.paging:paging-rxjava2-ktx:${versions.paging}"

    /* Navigation */
//    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
//    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"

    //=========================//
    //===== [END] Jetpack =====//
    //=========================//


    /* Firebase */
    implementation "com.google.firebase:firebase-analytics:17.2.2"
    implementation "com.google.firebase:firebase-messaging:20.1.0"

    /* Rx */
    implementation "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    implementation "com.jakewharton.rxbinding3:rxbinding:${versions.rxbinding3}"
    implementation "com.jakewharton.rxbinding3:rxbinding-appcompat:${versions.rxbinding3}"

    /* Koin */
    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:${versions.koin}"
    // Koin AndroidX ViewModel features
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin}"
    // Koin AndroidX Experimental features
    implementation "org.koin:koin-androidx-ext:${versions.koin}"

    /* Glide */
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    implementation 'jp.wasabeef:glide-transformations:4.0.1'

    /* Gson */
    implementation 'com.google.code.gson:gson:2.8.5'

    /* Cropper */
    implementation 'com.fenchtose.nocropper:nocropper:0.3.0'

    /* exo-player */
    implementation "com.google.android.exoplayer:exoplayer-core:${versions.exoPlayer}"
    implementation "com.google.android.exoplayer:exoplayer-ui:${versions.exoPlayer}"

    // INFO     other available implementations
//    implementation "com.google.android.exoplayer:exoplayer:${versions.exoPlayer}"
//    implementation "com.google.android.exoplayer:exoplayer-dash:${versions.exoPlayer}"
//    implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:${versions.exoPlayer}"
//    implementation "com.google.android.exoplayer:exoplayer-hls:${versions.exoPlayer}"

    /* Brightcove */
    implementation "com.brightcove.player:exoplayer2:${versions.brightcove}"
    implementation "com.brightcove.player:android-ssai-plugin:${versions.brightcove}"
    // INFO     appcompat has some issues. currently using simple BrightcovePlayer as superclass.
//    implementation "com.brightcove.player:android-appcompat-plugin:${versions.brightcove}"

    /* EventBus */
    implementation 'org.greenrobot:eventbus:3.1.1'

    /* Crashlytics */
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    /* WebSocket */
    implementation 'com.neovisionaries:nv-websocket-client:2.9'

    /* Retrofit */
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"

    /* Auth0 */
    implementation 'com.auth0.android:auth0:1.17.0'

    /* Branch.io */
    implementation 'io.branch.sdk.android:library:4.3.2'


    /* Fast Start */
    implementation 'net.ypresto.qtfaststartjava:qtfaststart:0.1.0'

    /* Realm */
    kapt "io.realm:realm-annotations-processor:${versions.realm}"
    implementation 'io.realm:android-adapters:3.1.0'

    /* Timber */
//    implementation 'com.jakewharton.timber:timber:4.7.1'


    /* comScore */
    implementation 'com.comscore:android-analytics:6.+'

    /* Twilio */
    implementation 'com.twilio:video-android:5.1.0'

    //lottie
    implementation 'com.airbnb.android:lottie:3.3.0'


    //region ++ Temporarily commented: part of chat imports ++

    /* PlayServices */
//    implementation 'com.google.android.gms:play-services-base:16.1.0'
//    implementation 'com.google.android.gms:play-services-maps:16.1.0'
//    implementation 'com.google.android.gms:play-services-location:17.0.0'

    //endregion

}

apply plugin: 'com.google.gms.google-services'
